// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://www.hatech.com.cn",
        "contact": {
            "name": "hatech",
            "url": "http://www.hatech.com.cn",
            "email": "hatech@hatech.com.cn"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/add/{num1}/{num2}": {
            "get": {
                "description": "根据两个数字求和",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "运算相关函数"
                ],
                "summary": "求和函数(get请求，【path，application/json方式】，路径中有参数)",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 36,
                        "description": "第一个数字",
                        "name": "num1",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 4,
                        "description": "第二个数字",
                        "name": "num2",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "interface"
                        }
                    }
                }
            }
        },
        "/ave": {
            "post": {
                "description": "根据两个数字求平均值",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/x-www-form-urlencoded"
                ],
                "tags": [
                    "运算相关函数"
                ],
                "summary": "求平均值函数(post请求，【query，application/x-www-form-urlencoded方式】，路径没有参数)",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 36,
                        "description": "第一个数字",
                        "name": "num1",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 4,
                        "description": "第二个数字",
                        "name": "num2",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "interface"
                        }
                    }
                }
            }
        },
        "/div": {
            "post": {
                "description": "根据两个数字求商",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "运算相关函数"
                ],
                "summary": "求商函数(post请求，【body, application/json方式】，路径没有参数)",
                "parameters": [
                    {
                        "description": "k8s对象",
                        "name": "kubernetes",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.KubernetesDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "interface"
                        }
                    }
                }
            }
        },
        "/mul/{num1}/{num2}": {
            "post": {
                "description": "根据两个数字求乘积",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "运算相关函数"
                ],
                "summary": "求乘积函数(post请求，【path，application/json方式】，路径有参数)",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 36,
                        "description": "第一个数字",
                        "name": "num1",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 4,
                        "description": "第二个数字",
                        "name": "num2",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "interface"
                        }
                    }
                }
            }
        },
        "/sub": {
            "get": {
                "description": "根据两个殊字求两个数字之减",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "运算相关函数"
                ],
                "summary": "求差函数(get请求，【query，application/json方式】，路径上没有参数)",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 36,
                        "description": "第一个数字",
                        "name": "num1",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 4,
                        "description": "第二个数字",
                        "name": "num2",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "interface"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.KubernetesDto": {
            "type": "object",
            "properties": {
                "num1": {
                    "description": "第一个殊字",
                    "type": "integer",
                    "example": 36
                },
                "num2": {
                    "description": "第二个殊字",
                    "type": "integer",
                    "example": 4
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:8080",
	BasePath:    "/",
	Schemes:     []string{},
	Title:       "计算器API",
	Description: "提供加减乘除工具",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
